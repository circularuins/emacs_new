
((digest . "08328c6d8e1066364394f08fb9f1f174") (undo-list nil (#("  ( is => 'rw', default => sub { new Responder( name => 'what' ); }, );
" 0 4 (fontified t) 4 6 (fontified t face font-lock-string-face) 6 10 (fontified t) 10 14 (fontified t face font-lock-string-face) 14 16 (fontified t) 16 23 (fontified t face font-lock-string-face) 23 27 (fontified t) 27 30 (fontified t face font-lock-keyword-face) 30 48 (fontified t) 48 52 (fontified t face font-lock-string-face) 52 56 (fontified t) 56 62 (fontified t face font-lock-string-face) 62 71 (fontified t) 71 72 (font-lock-multiline t fontified t face (jaspace-highlight-eol-face jaspace-highlight-eol-face))) . 284) ((marker) . -72) nil (#("has responder =>
" 0 4 (fontified t) 4 13 (fontified t face font-lock-string-face) 13 16 (fontified t) 16 17 (font-lock-multiline t fontified t face (jaspace-highlight-eol-face jaspace-highlight-eol-face))) . 284) ((marker) . -17) nil (452 . 459) nil (496 . 497) nil (495 . 496) nil (486 . 495) nil (448 . 452) nil (420 . 424) nil (#("    return $answer;
" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 19 (fontified t) 19 20 (font-lock-multiline t fontified t face (jaspace-highlight-eol-face jaspace-highlight-eol-face))) . 226) nil (204 . 211) nil (#("m" 0 1 (fontified t face cperl-nonoverridable-face)) . -204) nil (#("y" 0 1 (fontified t face font-lock-keyword-face)) . -205) nil (#(" " 0 1 (fontified t)) . -206) nil (#("$" 0 1 (fontified t face font-lock-variable-name-face)) . -207) nil (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -208) nil (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -209) nil (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -210) nil (#("w" 0 1 (fontified t face font-lock-variable-name-face)) . -211) nil (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -212) nil (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -213) nil (#(" " 0 1 (fontified t)) . -214) nil (#("=" 0 1 (fontified t)) . -215) nil (#(" " 0 1 (fontified t)) . -216) nil (217 . 218) nil (#(" " 0 1 (fontified t)) . -223) nil (#("." 0 1 (fontified t)) . -224) nil (#(" " 0 1 (fontified t)) . -225) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -226) nil (#(" " 0 1 (font-lock-multiline t fontified t)) . -499) nil (497 . 508) nil (#(" " 0 1 (font-lock-multiline t fontified t face (underline default default))) . -497) nil (497 . 498) nil (496 . 497) nil (482 . 496) nil (477 . 482) nil (474 . 477) nil (#("-" 0 1 (font-lock-multiline t fontified t)) . -474) nil (#(">" 0 1 (font-lock-multiline t fontified t)) . -475) nil (473 . 476) nil (472 . 473) nil (471 . 472) nil (468 . 471) nil (448 . 468) nil (467 . 474) nil (#("r" 0 1 (font-lock-multiline t fontified t)) . -467) nil (#("e" 0 1 (font-lock-multiline t fontified t)) . -468) nil (#("s" 0 1 (font-lock-multiline t fontified t)) . -469) nil (#("p" 0 1 (font-lock-multiline t fontified t)) . -470) nil (#("o" 0 1 (font-lock-multiline t fontified t)) . -471) nil (#("n" 0 1 (font-lock-multiline t fontified t)) . -472) nil (#("d" 0 1 (font-lock-multiline t fontified t)) . -473) nil (#("e" 0 1 (font-lock-multiline t fontified t)) . -474) nil (#("r" 0 1 (font-lock-multiline t fontified t)) . -475) (t 20308 . 30285) nil undo-tree-canary))
